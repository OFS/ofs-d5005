// Copyright 2021 Intel Corporation
// SPDX-License-Identifier: MIT

//-----------------------------------------------------------------------------
// Description :
// class he_mem_multi_user_intr_seq is executed by he_mem_multi_user_intr_test  
// This sequence verifies the functionality of the multiple user interruputs  
// The interrupt is generated by forcing/ writing the error register 
// PBA mechanism is verified using masking and un-masking the interrupt vector
// Sequence is running on virtual_sequencer 
//-----------------------------------------------------------------------------

`ifndef HE_MEM_MULTI_USER_INTR_SEQ_SVH
`define HE_MEM_MULTI_USER_INTR_SEQ_SVH

class he_mem_multi_user_intr_seq extends he_user_intr_seq;
    `uvm_object_utils(he_mem_multi_user_intr_seq)
    `uvm_declare_p_sequencer(virtual_sequencer)

    constraint he_mem_c { he_mem == 1; }
     constraint num_of_user_intr_c { num_of_user_intr inside {[2:5]}; }

    function new(string name = "he_mem_multi_user_intr_seq");
        super.new(name);
    endfunction : new


endclass : he_mem_multi_user_intr_seq

`endif // HE_MEM_MULTI_USER_INTR_SEQ_SVH
